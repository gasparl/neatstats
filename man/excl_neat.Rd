% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/excl_neat.R
\name{excl_neat}
\alias{excl_neat}
\title{Exclusion}
\usage{
excl_neat(
  dat,
  filt,
  excluded = FALSE,
  group_by = NULL,
  sort_by = "exclusion",
  hush = FALSE
)
}
\arguments{
\item{dat}{Data frame to be filtered.}

\item{filt}{An expression to use for filtering, by column values, the
\code{dat} data frame. (Only the rows for which the filter expression is
\code{TRUE} will be kept.)}

\item{excluded}{Logical; \code{FALSE} by default. If \code{TRUE}, the
function returns not only the filtered data frame, but also a data frame
containing the excluded rows. The returned object in this case will be a
list with two elements: (1) the filtered data frame named \code{filtered},
and (2) the data frame with excluded rows named \code{excluded} (see
Examples).}

\item{group_by}{String, or vector of strings: the name(s) of the column(s) in
the \code{dat} data frame, containing the vector(s) of factors by which the
printed counts are grouped.}

\item{sort_by}{String; specifies whether the printed counts should be sorted
by exclusion (default; \code{"exclusion"} or its short forms, e.g.
\code{"excl"}), or by the factors given for \code{group_by} (for this, give
any other string, e.g. \code{"conditions"}). If \code{NULL} (default).}

\item{hush}{Logical. If \code{TRUE}, prevents printing counts to console.}
}
\value{
A data frame with the rows for which the \code{filt} expression is
  \code{TRUE}, or, optionally, a list with this data frame plus a data frame
  with the excluded rows. At the same time, prints, by default, the count of
  remaining and excluded rows.
}
\description{
Filters dataset by rows (normally: subjects, observations) and
  prints the numbers of excluded rows and remaining rows. Returns the
  filtered dataset and (optionally) also the excluded rows.
}
\examples{

data("mtcars") # load base R example dataset

# filter mtcars for mpg > 20
excl_neat(mtcars, mpg > 20)

# assign the same
mtcars_filtered = excl_neat(mtcars, mpg > 20)
# (mtcars_filtered now contains the filtered subset)

# return and assign excluded rows too
mtcars_filtered_plus_excluded = excl_neat(mtcars, mpg > 20, excluded = TRUE)

# print filtered data frame
print(mtcars_filtered_plus_excluded$filtered)

# print data frame with excluded rows
print(mtcars_filtered_plus_excluded$excluded)

# group printed count by cyl
excl_neat(mtcars, mpg > 20, group_by = 'cyl')

# sort output by grouping
excl_neat(mtcars, mpg > 20, group_by = 'cyl', sort_by = 'group')

# group by cyl amd carb
excl_neat(mtcars, mpg > 15, group_by = c('cyl', 'carb'))

# longer filter expression
excl_neat(mtcars, mpg > 15 & gear == 4, group_by = 'cyl',)

# same with filter expression as string
excl_neat(mtcars, "mpg > 15 & gear == 4", group_by = 'cyl')

}
\seealso{
\code{\link{aggr_neat}}
}
