library(ggplot2)
if(!require(dplyr)){install.packages("dplyr")}
library(dplyr)
library(readxl)
library(xlsx)
library(data.table)
library(readxl)
install.packages("dplyr")
rm(list = ls())
library(ez)
library(schoRsch)
library(readr)
library(ggplot2)
library(dplyr)
library(readxl)
library(xlsx)
library(data.table)
library(readxl)
library(ez)
library(schoRsch)
library(readr)
library(ggplot2)
library(dplyr)
library(data.table)
library(readxl)
library(ez)
library(schoRsch)
library(readr)
library(ggplot2)
library(dplyr)
library(data.table)
library(ez)
library(schoRsch)
library(ggplot2)
library(dplyr)
library(data.table)
library(ez)
library(schoRsch)
library(plyr)
library(data.table)
library(ez)
installed.packages(stringr)
installed.packages("stringr")
# libs ----
library(data.table)
library(pander)
library(schoRsch)
library(pROC)
library(ggplot2)
library(sizeMat)
library(aod)
library(plyr)
library(MBESS)
library(ez)
library(BayesFactor)
library(TOSTER)
prnt
neatStats
install_github("gasparl/neatstats")
library("devtools")
install_github("gasparl/neatstats")
prnt
neatStats::prnt
neatStats::t_neat
t_neat
t_neat
neatStats
neatStats::t_neat
cat('\u03b7')
cat( gsub("np2", "\u03b7p2", 'sdfadss np2 = dsfsd' ) )
cat( gsub("np2", "\u03b7", 'sdfadss np2 = dsfsd' ) )
xx= gsub("np2", "\u03b7", 'sdfadss np2 = dsfsd' )
to_print = gsub("np2", "\u03b7", 'sdfadss np2 = dsfsd' )
Encoding(to_print) = "UTF-8"
cat(to_print)
to_print = gsub("np2", "\u03b7p2", 'sdfadss np2 = dsfsd' )
cat(to_print)
to_print = gsub("np2", "\u03b7p2", 'sdfadss np2 = dsfsd' )
Encoding(to_print) = "UTF-8"
cat(to_print)
cat('\u0032')
cat('\u2082')
cat('2\u2082')
cat('2\u00b2')
cat('\u209a')
cat('\u209A')
cat('\ud835')
cat('\ud835t')
cat('\ud835\udc95')
xx = \ud835\udc95
xx = '\ud835\udc95''
Encoding(xx) = "UTF-8"
xx
s
xx = '\ud835\udc95'
Encoding(xx) = "UTF-8"
xx
cat(xx)
library("pwr")
library("metafor")
library("meta")
install.packages("metafor")
library("metafor")
library("meta")
install.packages("meta")
library("metafor", dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages("metafor", dependencies=TRUE, repos='http://cran.rstudio.com/')
library('devtools')
install_github("wviechtb/metafor")
# installing/loading the latest installr package:
install.packages("installr"); library(installr) # install+load installr
updateR() # updating R.
?neatStats
?neatStats::anova_neat
library("neatStats")
?neatStats
library("neatStats")
?roc
t_neat(c(2,3,3,5), c(2,33,42,51), auc_added = T )
t_neat(c(2,113,113,115), c(2,33,42,51), auc_added = T )
citation("pROC")
citation("spelling")
dat_1 = data.frame(
subject = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
grouping1 = c(1, 1, 1, 1, 2, 2, 2, 2, 2, 2),
grouping2 = c(1, 2, 1, 2, 2, 1, 1, 1, 2, 1),
value_1_a = c(36.2,45.2,41,24.6,30.5,28.2,40.9,45.1,31,16.9),
value_2_a = c(-14.1,58.5,-25.5,42.2,-13,4.4,55.5,-28.5,25.6,-37.1),
value_1_b = c(83,71,111,70,92,75,110,111,110,85),
value_2_b = c(8.024,-14.162,3.1,-2.1,-1.85,0.91,11.553,18.37,0.3,-0.59)
)
anova_neat('dat_1', values = 'value_1_a, value_2_a, value_1_b, value_2_b', id_col = "subject", between_vars = 'group1' )
anova_neat('dat_1', values = 'value_1_a, value_2_a, value_1_b, value_2_b', id_col = "subject", between_vars = 'grouping1' )
library("neatStats")
?props_neat
df
print('sdf')
13-12
-13--12
library("neatStats")
dat_1 = data.frame(
subject = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
grouping1 = c(1, 1, 1, 1, 2, 2, 2, 2, 2, 2),
grouping2 = c(1, 2, 1, 2, 2, 1, 1, 1, 2, 1),
value_1_a = c(36.2,45.2,41,24.6,30.5,28.2,40.9,45.1,31,16.9),
value_2_a = c(-14.1,58.5,-25.5,42.2,-13,4.4,55.5,-28.5,25.6,-37.1),
value_1_b = c(83,71,111,70,92,75,110,111,110,85),
value_2_b = c(8.024,-14.162,3.1,-2.1,-1.85,0.91,11.553,18.37,0.3,-0.59)
)
anova_neat('dat_1', values = 'value_1_a, value_2_a, value_1_b, value_2_b', between_vars = 'grouping1, grouping2')
anova_neat('dat_1', values = 'value_1_a', between_vars = 'grouping1, grouping2')
anova_neat('dat_1', values = 'value_1_a', between_vars = 'grouping1')
anova_neat('dat_1', values = 'value_1_a', between_vars = 'grouping1')
anova_neat('dat_1', values = 'value_1_a, value_2_a' )
anova_neat('dat_1', values = 'value_1_a', between_vars = 'grouping1')
library("neatStats")
# get the between-subject effect of 'grouping1'
anova_neat('dat_1', values = 'value_1_a', between_vars = 'grouping1')
cat("c(", paste( round( rnorm(n = 10, mean = 5, sd = 15 ), 3 ), collapse = ','), ")", sep = '')
cat("c(", paste( round( rnorm(n = 10, mean = 5, sd = 15 ), 1 ), collapse = ','), ")", sep = '')
cat("c(", paste( round( rnorm(n = 10, mean = 5, sd = 20 ), 1 ), collapse = ','), ")", sep = '')
# assign random data in a data frame for illustration
dat_1 = data.frame(
subject = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
grouping1 = c(1, 1, 1, 1, 2, 2, 2, 2, 2, 2),
grouping2 = c(1, 2, 1, 2, 2, 1, 1, 1, 2, 1),
value_1_a = c(36.2, 45.2, 41, 24.6, 30.5, 28.2, 40.9, 45.1, 31, 16.9),
value_2_a = c(-14.1, 58.5, -25.5, 42.2, -13, 4.4, 55.5, -28.5, 25.6, -37.1),
value_1_b = c(83, 71, 111, 70, 92, 75, 110, 111, 110, 85),
value_2_b = c(8.024, -14.162, 3.1, -2.1, -1.5, 0.91, 11.53, 18.37, 0.3, -0.59),
value_1_c = c(27.4,-17.6,-32.7, 0.4, 37.2, 1.7, 18.2, 8.9, 1.9, 0.4),
value_2_c = c(7.7, -0.8, 2.2, 14.1, 22.1, -47.7, -4.8, 8.6, 6.2, 18.2)
)
# within-subject effect for 'value_1_a vs. value_1_b vs. value_1_c'
anova_neat('dat_1', values = 'value_1_a, value_1_b, value_1_c' )
# get the within-subject effect for 'value_1_a vs. value_1_b'
anova_neat('dat_1', values = 'value_1_a, value_1_b' )
# repeated measures:
# get the within-subject effect for 'value_1_a vs. value_1_b'
anova_neat('dat_1', values = 'value_1_a, value_1_b')
# same, but give the factor a custom name
anova_neat('dat_1', values = 'value_1_a, value_1_b', within_ids = 'a vs. b')
# same, but give the factor a custom variable name
anova_neat('dat_1', values = 'value_1_a, value_1_b', within_ids = 'a_vs_b')
# within-subject main effects 'value_1_a vs. value_1_b' and 'value_2_a vs.
# value_2_b', and the interaction of these two effects
anova_neat('dat_1', values = 'value_1_a, value_2_a, value_1_b, value_2_b', within_ids = list(letters = c('_a', '_b'), numbers =  c('_1', '_2') ) )
# within-subject effect for 'value_1_a' vs. 'value_1_b' vs. 'value_1_c', between-subject effect 'grouping1'
anova_neat('dat_1', values = 'value_1_a, value_1_b, value_1_c', between_vars = 'grouping1')
# same as above, but now including between-subject main effect 'grouping2' and
# its interactions
anova_neat(
'dat_1',
values = 'value_1_a, value_2_a, value_1_b, value_2_b',
within_ids = list(
letters = c('_a', '_b'),
numbers =  c('_1', '_2'),
between_vars = 'grouping2'
)
)
# same as above, but now including between-subject main effect 'grouping2' and
# its interactions
anova_neat(
'dat_1',
values = 'value_1_a, value_2_a, value_1_b, value_2_b',
within_ids = list(
letters = c('_a', '_b'),
numbers =  c('_1', '_2'),
between_vars = 'grouping1'
)
)
anova_neat('dat_1', values = 'value_1_a, value_2_a, value_1_b, value_2_b', between_vars = 'grouping1, grouping2')
anova_neat('dat_1', values = 'value_1_a, value_2_a, value_1_b, value_2_b', between_vars = 'grouping1, grouping2', within_ids = list(lett = c('_a', '_b'), num =  c('_1', '_2') ) )
# same as above, but now including between-subject main effect 'grouping2' and
# its interactions
anova_neat(
'dat_1',
values = 'value_1_a, value_2_a, value_1_b, value_2_b',
within_ids = list(
letters = c('_a', '_b'),
numbers =  c('_1', '_2')
),
between_vars = 'grouping1'
)
anova_neat(
'dat_1',
values = 'value_1_a, value_2_a, value_1_b, value_2_b',
within_ids = list(
letters = c('_a', '_b'),
numbers =  c('_1', '_2')
),
between_vars = 'grouping2'
)
anova_neat('dat_1',
values = 'rating_fright_low_disgust_low, rating_fright_high_disgust_low, rating_fright_low_disgust_high, rating_fright_high_disgust_high',
within_ids = list(
letters = c('disgust_low', 'disgust_high'),
numbers =  c('fright_low', 'fright_high')
))
# this could be meaningfully assigned e.g. as below
pic_ratings = data.frame(
rating_fright_low_disgust_low = c(36.2, 45.2, 41, 24.6, 30.5, 28.2, 40.9, 45.1, 31, 16.9),
rating_fright_high_disgust_low = c(-14.1, 58.5,-25.5, 42.2,-13, 4.4, 55.5,-28.5, 25.6,-37.1),
rating_fright_low_disgust_high = c(83, 71, 111, 70, 92, 75, 110, 111, 110, 85),
rating_fright_high_disgust_high = c(8.024,-14.162, 3.1,-2.1,-1.5, 0.91, 11.53, 18.37, 0.3,-0.59)
)
anova_neat('pic_ratings',
values = 'rating_fright_low_disgust_low, rating_fright_high_disgust_low, rating_fright_low_disgust_high, rating_fright_high_disgust_high',
within_ids = list(
letters = c('disgust_low', 'disgust_high'),
numbers =  c('fright_low', 'fright_high')
))
# within-subject 'number' main effect for variables with number '1' vs. number
# '2' ('value_1_a' and 'value_1_b' vs. 'value_2_a' and 'value_2_b'), 'letter'
# main effect for variables with final letterr 'a' vs. final letter 'b'
# ('value_1_a' and 'value_2_a' vs. 'value_1_b' and 'value_2_b'), and the
# 'letter' x 'number' interaction
anova_neat('dat_1',
values = 'value_1_a, value_2_a, value_1_b, value_2_b',
within_ids = list(
letters = c('_a', '_b'),
numbers =  c('_1', '_2')
))
anova_neat('pic_ratings',
values = 'rating_fright_low_disgust_low, rating_fright_high_disgust_low, rating_fright_low_disgust_high, rating_fright_high_disgust_high',
within_ids = list(
disgustingness = c('disgust_low', 'disgust_high'),
frighteningness =  c('fright_low', 'fright_high')
))
anova_neat(
'pic_ratings',
values = 'rating_fright_low_disgust_low, rating_fright_high_disgust_low, rating_fright_low_disgust_high, rating_fright_high_disgust_high',
within_ids = list(
disgustingness = c('disgust_low', 'disgust_high'),
frighteningness =  c('fright_low', 'fright_high')
),
between_vars = 'session'
)
# now let's say the ratings were done in two sessions
pic_ratings = data.frame(
session = c(1, 1, 1, 1, 2, 2, 2, 2, 2, 2),
rating_fright_low_disgust_low = c(36.2, 45.2, 41, 24.6, 30.5, 28.2, 40.9, 45.1, 31, 16.9),
rating_fright_high_disgust_low = c(-14.1, 58.5,-25.5, 42.2,-13, 4.4, 55.5,-28.5, 25.6,-37.1),
rating_fright_low_disgust_high = c(83, 71, 111, 70, 92, 75, 110, 111, 110, 85),
rating_fright_high_disgust_high = c(8.024,-14.162, 3.1,-2.1,-1.5, 0.91, 11.53, 18.37, 0.3,-0.59)
)
anova_neat(
'pic_ratings',
values = 'rating_fright_low_disgust_low, rating_fright_high_disgust_low, rating_fright_low_disgust_high, rating_fright_high_disgust_high',
within_ids = list(
disgustingness = c('disgust_low', 'disgust_high'),
frighteningness =  c('fright_low', 'fright_high')
),
between_vars = 'session'
)
# same as above, but now including between-subject main effect 'grouping2' and
# its interactions
anova_neat(
'dat_1',
values = 'value_1_a, value_2_a, value_1_b, value_2_b',
within_ids = list(
letters = c('_a', '_b'),
numbers =  c('_1', '_2')
),
between_vars = 'grouping2'
)
# now let's say the ratings were done in two sessions
pic_ratings = data.frame(
session = c(1, 2, 1, 2, 2, 1, 1, 1, 2, 1),
rating_fright_low_disgust_low = c(36.2, 45.2, 41, 24.6, 30.5, 28.2, 40.9, 45.1, 31, 16.9),
rating_fright_high_disgust_low = c(-14.1, 58.5,-25.5, 42.2,-13, 4.4, 55.5,-28.5, 25.6,-37.1),
rating_fright_low_disgust_high = c(83, 71, 111, 70, 92, 75, 110, 111, 110, 85),
rating_fright_high_disgust_high = c(8.024,-14.162, 3.1,-2.1,-1.5, 0.91, 11.53, 18.37, 0.3,-0.59)
)
# now test the effect and interactions of 'session'
anova_neat(
'pic_ratings',
values = 'rating_fright_low_disgust_low, rating_fright_high_disgust_low, rating_fright_low_disgust_high, rating_fright_high_disgust_high',
within_ids = list(
disgustingness = c('disgust_low', 'disgust_high'),
frighteningness =  c('fright_low', 'fright_high')
),
between_vars = 'session'
)
pic_ratings
head(pic_ratings)
head(dat_1)
head(pic_ratings) # see what we have
? aggr_neat
library("neatStats")
? aggr_neat
? table_neat
t
props_neat(12,32,43,44)
neatStats::props_neat(12,32,43,44)
neatStats::props_neat(12,32,43,44)
neatStats::props_neat(12,32,43,44)
neatStats::props_neat(12,32,43,44)
neatStats::anova_neat
library('devtools')
library("roxygen2")
setwd('C:/research/proj_neatstats/neatStats')
document()
devtools::check()
)
)
head(dat_1) # see what we have
#'Steiger, J. H. (2004). Beyond the F test: effect size confidence intervals and
#'tests of close fit in the analysis of variance and contrast analysis.
#'Psychological Methods, 9(2), 164-182.
#'\doi{https://doi.org/10.1037/1082-989X.9.2.164}
#'
#' @seealso \code{\link{t_neat}}
#' @examples
#' # assign random data in a data frame for illustration
#' # (note that the 'subject' is only for illustration; since each row contains the
#' # data of a single subject, no additional subject id is needed)
dat_1 = data.frame(
)
dat_1 = data.frame(
subject = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
grouping1 = c(1, 1, 1, 1, 2, 2, 2, 2, 2, 2),
grouping2 = c(1, 2, 1, 2, 2, 1, 1, 1, 2, 1),
value_1_a = c(36.2, 45.2, 41, 24.6, 30.5, 28.2, 40.9, 45.1, 31, 16.9),
value_2_a = c(-14.1, 58.5, -25.5, 42.2, -13, 4.4, 55.5, -28.5, 25.6, -37.1),
value_1_b = c(83, 71, 111, 70, 92, 75, 110, 111, 110, 85),
value_2_b = c(8.024, -14.162, 3.1, -2.1, -1.5, 0.91, 11.53, 18.37, 0.3, -0.59),
value_1_c = c(27.4,-17.6,-32.7, 0.4, 37.2, 1.7, 18.2, 8.9, 1.9, 0.4),
value_2_c = c(7.7, -0.8, 2.2, 14.1, 22.1, -47.7, -4.8, 8.6, 6.2, 18.2)
)
head(dat_1) # see what we have
#'Steiger, J. H. (2004). Beyond the F test: effect size confidence intervals and
#'tests of close fit in the analysis of variance and contrast analysis.
#'Psychological Methods, 9(2), 164-182.
#'\doi{https://doi.org/10.1037/1082-989X.9.2.164}
#'
#' @seealso \code{\link{t_neat}}
#' @examples
#' # assign random data in a data frame for illustration
#' # (note that the 'subject' is only for illustration; since each row contains the
#' # data of a single subject, no additional subject id is needed)
dat_1 = data.frame(
#'Steiger, J. H. (2004). Beyond the F test: effect size confidence intervals and
#'tests of close fit in the analysis of variance and contrast analysis.
#'Psychological Methods, 9(2), 164-182.
#'\doi{https://doi.org/10.1037/1082-989X.9.2.164}
#'
#' @seealso \code{\link{t_neat}}
#' @examples
#' # assign random data in a data frame for illustration
#' # (note that the 'subject' is only for illustration; since each row contains the
#' # data of a single subject, no additional subject id is needed)
dat_1 = data.frame(
grouping1 = c(1, 1, 1, 1, 2, 2, 2, 2, 2, 2),
value_1_a = c(36.2, 45.2, 41, 24.6, 30.5, 28.2, 40.9, 45.1, 31, 16.9),
value_1_b = c(83, 71, 111, 70, 92, 75, 110, 111, 110, 85),
value_1_c = c(27.4,-17.6,-32.7, 0.4, 37.2, 1.7, 18.2, 8.9, 1.9, 0.4),
)
head(dat_1) # see what we have
dat_1 = data.frame(
subject = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
grouping1 = c(1, 1, 1, 1, 2, 2, 2, 2, 2, 2),
grouping2 = c(1, 2, 1, 2, 2, 1, 1, 1, 2, 1),
value_1_a = c(36.2, 45.2, 41, 24.6, 30.5, 28.2, 40.9, 45.1, 31, 16.9),
value_2_a = c(-14.1, 58.5, -25.5, 42.2, -13, 4.4, 55.5, -28.5, 25.6, -37.1),
value_1_b = c(83, 71, 111, 70, 92, 75, 110, 111, 110, 85),
value_2_b = c(8.024, -14.162, 3.1, -2.1, -1.5, 0.91, 11.53, 18.37, 0.3, -0.59),
value_1_c = c(27.4,-17.6,-32.7, 0.4, 37.2, 1.7, 18.2, 8.9, 1.9, 0.4),
value_2_c = c(7.7, -0.8, 2.2, 14.1, 22.1, -47.7, -4.8, 8.6, 6.2, 18.2)
)
head(dat_1)
# get the between-subject effect of 'grouping1'
anova_neat('dat_1', values = 'value_1_a', between_vars = 'grouping1')
# main effects of 'grouping1', 'grouping2', and their interactions
anova_neat('dat_1', values = 'value_1_a', between_vars = 'grouping1, grouping2')
# repeated measures:
# get the within-subject effect for 'value_1_a' vs. 'value_1_b'
anova_neat('dat_1', values = 'value_1_a, value_1_b')
# same, but give the factor a custom variable name, and omit BF for speed
anova_neat('dat_1',
values = 'value_1_a, value_1_b',
within_ids = 'a_vs_b',
bf_added = FALSE)
# get the between-subject effect of 'grouping1'
anova_neat('dat_1', values = 'value_1_a', between_vars = 'grouping1')
# main effects of 'grouping1', 'grouping2', and their interactions
anova_neat('dat_1', values = 'value_1_a', between_vars = 'grouping1, grouping2')
# repeated measures:
# get the within-subject effect for 'value_1_a' vs. 'value_1_b'
anova_neat('dat_1', values = 'value_1_a, value_1_b')
# same, but give the factor a custom variable name, and omit BF for speed
anova_neat('dat_1',
values = 'value_1_a, value_1_b',
within_ids = 'a_vs_b',
bf_added = FALSE)
# or
anova_neat('dat_1', values = 'value_1_a, value_1_b', within_ids = 'letters', bf_added = FALSE)
# within-subject effect for 'value_1_a' vs. 'value_1_b' vs. 'value_1_c'
anova_neat('dat_1', values = 'value_1_a, value_1_b, value_1_c', bf_added = FALSE)
# within-subject main effect for 'value_1_a' vs. 'value_1_b' vs. 'value_1_c',
# between-subject main effect 'grouping1', and the interaction of these two main
# effects
anova_neat('dat_1', values = 'value_1_a, value_1_b, value_1_c', between_vars = 'grouping1', bf_added = FALSE)
# within-subject 'number' main effect for variables with number '1' vs. number
# '2' ('value_1_a' and 'value_1_b' vs. 'value_2_a' and 'value_2_b'), 'letter'
# main effect for variables with final letterr 'a' vs. final letter 'b'
# ('value_1_a' and 'value_2_a' vs. 'value_1_b' and 'value_2_b'), and the
# 'letter' x 'number' interaction
anova_neat('dat_1',
values = 'value_1_a, value_2_a, value_1_b, value_2_b',
within_ids = list(
letters = c('_a', '_b'),
numbers =  c('_1', '_2')
), bf_added = FALSE)
# same as above, but now including between-subject main effect 'grouping2' and
# its interactions
anova_neat(
'dat_1',
values = 'value_1_a, value_2_a, value_1_b, value_2_b',
within_ids = list(
letters = c('_a', '_b'),
numbers =  c('_1', '_2')
),
between_vars = 'grouping2', bf_added = FALSE
)
# this could be meaningfully assigned e.g. as below
pic_ratings = data.frame(
subject = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
rating_fright_low_disgust_low = c(36.2, 45.2, 41, 24.6, 30.5, 28.2, 40.9, 45.1, 31, 16.9),
rating_fright_high_disgust_low = c(-14.1, 58.5,-25.5, 42.2,-13, 4.4, 55.5,-28.5, 25.6,-37.1),
rating_fright_low_disgust_high = c(83, 71, 111, 70, 92, 75, 110, 111, 110, 85),
rating_fright_high_disgust_high = c(8.024,-14.162, 3.1,-2.1,-1.5, 0.91, 11.53, 18.37, 0.3,-0.59)
)
head(pic_ratings) # see what we have
# the same logic applies as for the examples above, but now the
# within-subject differences can be more meaningfully specified, e.g.
# 'disgust_low' vs. 'disgust_high' for levels of disgustingness, while
# 'fright_low' vs. 'fright_high' for levels of frighteningness
anova_neat(
'pic_ratings',
values = 'rating_fright_low_disgust_low, rating_fright_high_disgust_low,
rating_fright_low_disgust_high, rating_fright_high_disgust_high',
within_ids = list(
disgustingness = c('disgust_low', 'disgust_high'),
frighteningness =  c('fright_low', 'fright_high')
), bf_added = FALSE
)
# now let's say the ratings were done in two separate groups
pic_ratings = data.frame(
subject = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
group_id = c(1, 2, 1, 2, 2, 1, 1, 1, 2, 1),
rating_fright_low_disgust_low = c(36.2, 45.2, 41, 24.6, 30.5, 28.2, 40.9, 45.1, 31, 16.9),
rating_fright_high_disgust_low = c(-14.1, 58.5,-25.5, 42.2,-13, 4.4, 55.5,-28.5, 25.6,-37.1),
rating_fright_low_disgust_high = c(83, 71, 111, 70, 92, 75, 110, 111, 110, 85),
rating_fright_high_disgust_high = c(8.024,-14.162, 3.1,-2.1,-1.5, 0.91, 11.53, 18.37, 0.3,-0.59)
)
# now test the effect and interactions of 'group_id'
anova_neat(
'pic_ratings',
values = 'rating_fright_low_disgust_low, rating_fright_high_disgust_low,
rating_fright_low_disgust_high, rating_fright_high_disgust_high',
within_ids = list(
disgustingness = c('disgust_low', 'disgust_high'),
frighteningness =  c('fright_low', 'fright_high')
),
between_vars = 'group_id', bf_added = FALSE
)
library('devtools')
library("roxygen2")
setwd('C:/research/proj_neatstats/neatStats')
document()
devtools::check()
