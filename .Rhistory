)
# merge aggregated subject data
if (!exists("subjects_merged")) {
# if doesn't yet exist, create first line
subjects_merged = subject_line
} else {
# if exists, add the next lines
subjects_merged = rbind(subjects_merged, subject_line)
# note: if some data may be discrepant for some participants (e.g., some
# participants are tested with blue and yellow colors too), you can use
# rbind.fill from the 'plyr' library to fill in missing data with NAs
}
}
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition'
)
# how sure are we about these apparent differences? even before statistical comparisons, we can take a look at the CIs of the means
library(ggplot2)
xx = plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition'
)
xx+ scale_fill_manual(values = c("red","blue")))
xx+ scale_fill_manual(values = c("red","blue"))
xx+ scale_color_manual(values = c("red","blue"))
xx+ line_color_manual(values = c("red","blue"))
xx+ scale_color_manual(values = c("red","blue"))
library('devtools')
library("roxygen2")
setwd('C:/research/proj_neatstats/neatStats')
document()
# devtools::build_manual()
# devtools::check()
# library("spelling")
# spelling::spell_check_package()
setwd('C:/research/proj_neatstats/')
#uninstall("neatStats")
install("neatStats", upgrade = "never")
# install("neatStats", upgrade = "never", quick = TRUE)
library("neatStats")
setwd('C:/research/proj_neatstats/neatStats')
document()
document()
document()
# devtools::build_manual()
# devtools::check()
# library("spelling")
# spelling::spell_check_package()
setwd('C:/research/proj_neatstats/')
#uninstall("neatStats")
install("neatStats", upgrade = "never")
# install("neatStats", upgrade = "never", quick = TRUE)
library("neatStats")
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition'
)
xx+ scale_color_manual(values = c("red","blue"))
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition'
) + scale_color_manual(values = c("red","blue"))
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition'
) + scale_color_manual(values = c("red","green"))
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition'
) + scale_color_manual(values = c("pink","green"))
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition'
)
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "bar"
)
library('devtools')
library("roxygen2")
setwd('C:/research/proj_neatstats/neatStats')
document()
library('devtools')
library("roxygen2")
setwd('C:/research/proj_neatstats/neatStats')
document()
# devtools::build_manual()
# devtools::check()
# library("spelling")
# spelling::spell_check_package()
setwd('C:/research/proj_neatstats/')
#uninstall("neatStats")
install("neatStats", upgrade = "never")
# install("neatStats", upgrade = "never", quick = TRUE)
library("neatStats")
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "bar"
)
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "line"
)
setwd('C:/research/proj_neatstats/neatStats')
document()
# devtools::build_manual()
# devtools::check()
# library("spelling")
# spelling::spell_check_package()
setwd('C:/research/proj_neatstats/')
#uninstall("neatStats")
install("neatStats", upgrade = "never")
# install("neatStats", upgrade = "never", quick = TRUE)
library("neatStats")
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "line"
)
library('devtools')
library("roxygen2")
setwd('C:/research/proj_neatstats/neatStats')
document()
# devtools::build_manual()
# devtools::check()
# library("spelling")
# spelling::spell_check_package()
setwd('C:/research/proj_neatstats/')
#uninstall("neatStats")
install("neatStats", upgrade = "never")
# install("neatStats", upgrade = "never", quick = TRUE)
library("neatStats")
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "line"
)
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "line"
) + scale_color_manual(values = c("#555555","#000000"))
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "line"
) + scale_color_manual(values = c("#444444","#000000"))
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "line"
) + scale_color_manual(values = c("red", "#000000"))
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "line"
) + scale_color_discrete(values = c("red", "#000000"))
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "line"
)
library('devtools')
library("roxygen2")
setwd('C:/research/proj_neatstats/neatStats')
document()
document()
# devtools::build_manual()
# devtools::check()
# library("spelling")
# spelling::spell_check_package()
setwd('C:/research/proj_neatstats/')
#uninstall("neatStats")
install("neatStats", upgrade = "never")
# install("neatStats", upgrade = "never", quick = TRUE)
library("neatStats")
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "line"
)
library('devtools')
library("roxygen2")
setwd('C:/research/proj_neatstats/neatStats')
document()
# devtools::build_manual()
# devtools::check()
# library("spelling")
# spelling::spell_check_package()
setwd('C:/research/proj_neatstats/')
#uninstall("neatStats")
install("neatStats", upgrade = "never")
# install("neatStats", upgrade = "never", quick = TRUE)
library("neatStats")
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "line"
)
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "line",
line_colors = c("red", "green")
)
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
type = "bar",
line_colors = c("red", "green")
)
devtools::check()
library('devtools')
library("roxygen2")
setwd('C:/research/proj_neatstats/neatStats')
document()
# devtools::build_manual()
# devtools::check()
# library("spelling")
# spelling::spell_check_package()
setwd('C:/research/proj_neatstats/')
setwd('C:/research/proj_neatstats/neatStats')
devtools::check()
devtools::build_manual()
devtools::build_manual()
t_neat(subjects_fullv$rt_green_negative,
subjects_fullv$rt_red_negative,
pair = T)
subjects_fullv = subjects_merged[subjects_merged$condition == 'fullvision', ]
t_neat(subjects_fullv$rt_green_negative,
subjects_fullv$rt_red_negative,
pair = T)
t_neat(subjects_fullv$rt_green_negative,
subjects_fullv$rt_red_negative,
pair = T, plot_densities = T)
t_neat(subjects_fullv$rt_green_positive,
subjects_fullv$rt_red_positive,
pair = T)+ geom_density(alpha = 0.4, trim = FALSE)
xx = t_neat(subjects_fullv$rt_green_positive,
subjects_fullv$rt_red_positive,
pair = T)
xx$density_plot + geom_density(alpha = 0.4, trim = FALSE)
xx$density_plot
xx = t_neat(subjects_fullv$rt_green_positive,
subjects_fullv$rt_red_positive,
pair = T, plot_densities = T)
xx$density_plot + geom_density(alpha = 0.4, trim = FALSE)
xx$density_plot + geom_density(alpha = 0.4, trim = TRUE)
xx$density_plot + + geom_hline(yintercept=0, colour="white", size=1)
xx$density_plot +geom_hline(yintercept=0, colour="white", size=1)
t_neat(subjects_fullv$rt_green_positive,
subjects_fullv$rt_red_positive,
pair = T, plot_densities = T)
anova_neat(
subjects_merged[subjects_merged$condition == 'colorblind', ],
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
bf_added = T
)
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
method = median,
eb_method = mad
)
plot_neat(
data_per_subject = subjects_merged,
values = c(
'rt_green_negative',
'rt_green_positive',
'rt_red_negative',
'rt_red_positive'
),
within_ids = list(
color = c('green', 'red'),
valence = c('positive', 'negative')
),
between_vars = 'condition',
eb_method = mean_ci
)
